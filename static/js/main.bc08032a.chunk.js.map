{"version":3,"sources":["pages/admin.jsx","pages/board.jsx","pages/spec.jsx","pages/user.jsx","App.js","serviceWorker.js","index.js"],"names":["randomInt","require","peopleArr","JSON","parse","localStorage","getItem","peopleDoneArr","peopleNotDoneArr","FilterDoneNotDone","arr1","arr2","arr3","map","item","bool","push","CalcTimeOnSave","props","tempArr","tempArr2","temp","length","window","SpecDirectory","specTypes","spec","key","toLowerCase","subtr","moment","utc","timeDone","diff","timeAdded","format","display","time","instances","avgTime","console","log","index","qNumber","name","surname","timeLast","setItem","stringify","startOf","result","reduce","r","o","get","Object","assign","set","Map","values","duration","asMilliseconds","i","tempTime","temptemp","PatientRow","listOfPeople","includes","className","id","scope","SideBarNav","href","AddNew","showModal","e","setState","show","state","handleNameChange","bind","handleSurnameChange","handleTypeChange","postPatient","count","evt","this","target","value","type","preventDefault","qNum","newPatient","sort","a","b","onClick","Modal","animation","onClose","autoFocus","Header","Title","Button","variant","Body","Row","Group","onChange","as","Col","controlId","Label","Control","placeholder","Component","SaveList","filter","el","indexOf","AdminPage","error","addNewPatient","data","$","status","updatedPatientList","slice","newName","newSurname","newType","updatePatient","LightBoardPage","data-label","boardPath","specPath","userPath","adminPath","location","pathname","Filter","currentSpec","updateFromState","counter","handleDoneCheck","SpecPage","buildList","deleteItem","indexToDelete","people","isServiced","concat","array","array2","tempArr3","tempArr4","word","CalcTimeOnDone","updatePeopleList","filteredPeople","person","add","FindTime","htmlFor","onkeyup","handleNumberChange","findPatientTime","TimeCountDown","useState","seconds","setSeconds","useEffect","interval","setInterval","clearInterval","d","Number","h","Math","floor","m","s","secondsToHms","UserBoard","number","numberAhead","timeAhead","showResult","change","found","handleOnDelay","document","getElementById","style","tempList","parseInt","displayOnClick","hideOnClick","handleNotFund","App","exact","path","component","SpecialistPage","CountVisitTime","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4UAWMA,EAAYC,EAAQ,IAEfC,EAA8D,OAAjDC,KAAKC,MAAMC,aAAaC,QAAQ,aAAyBH,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,GACrHC,EAAiE,OAAjDJ,KAAKC,MAAMC,aAAaC,QAAQ,aAAyBH,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,GACxHE,EAAuE,OAApDL,KAAKC,MAAMC,aAAaC,QAAQ,gBAA4BH,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,GAC5I,SAASG,EAAkBC,EAAMC,EAAKC,GAClCF,EAAKG,KAAI,SAACC,IACW,IAAdA,EAAKC,KACJJ,EAAKK,KAAKF,GAEVF,EAAKI,KAAKF,MAItB,SAASG,EAAgBC,GAErB,IAAIC,EAAU,GACVC,EAAW,GACXC,EAAOnB,EACQ,IAAhBmB,EAAKC,QACJD,EAAKR,KAAI,SAACC,GACNS,OAAOC,cAAcC,UAAUZ,KAAI,SAACa,GAChC,GAAIA,EAAKC,MAAQb,EAAKY,KAAKE,gBAA+B,IAAdd,EAAKC,KAAe,CAC5D,IAAIc,EAAQC,IAAOC,IAAID,IAAOhB,EAAKkB,SAAU,SAASC,KAAKH,IAAOhB,EAAKoB,UAAW,WAAWC,OAAO,SACpGhB,EAAQH,KAAK,CACTU,KAAMA,EAAKU,QACXC,KAAMR,EACNS,UAAW,EACXC,QAAS,IAEbC,QAAQC,IAAIf,EAAKU,QAAQ,IAAIP,GAC7BT,EAASJ,KAAK,CACV0B,MAAO5B,EAAK4B,MACZC,QAAS7B,EAAK6B,QACdC,KAAM9B,EAAK8B,KACXlB,KAAMZ,EAAKY,KACXmB,QAAS/B,EAAK+B,QACd9B,KAAMD,EAAKC,KACXmB,UAAWpB,EAAKoB,UAChBF,SAAUlB,EAAKkB,SACfc,SAAUjB,WAO9BxB,aAAa0C,QAAQ,WAAW5C,KAAK6C,UAAU5B,IAC/CA,EAAW,GACXoB,QAAQC,IAAIpC,aAAaC,QAAQ,aACjCa,EAAQN,KAAI,SAACC,GACTA,EAAKuB,KAAOP,IAAOhB,EAAKuB,KAAM,SAASJ,KAAKH,MAASmB,QAAQ,OAAQ,cAEzE,IAAMC,EAAM,YAAO/B,EAAQgC,QAAO,SAACC,EAAGC,GAClC,IAAM1B,EAAM0B,EAAE3B,KAERZ,EAAOsC,EAAEE,IAAI3B,IAAQ4B,OAAOC,OAAO,GAAIH,EAAG,CAC5ChB,KAAM,EACNC,UAAW,IAKf,OAHAxB,EAAKuB,MAAQgB,EAAEhB,KACfvB,EAAKwB,WAAae,EAAEf,UAEbc,EAAEK,IAAI9B,EAAKb,KACnB,IAAI4C,KAAKC,UAEZT,EAAOrC,KAAI,SAACC,GACRA,EAAKyB,QAAUT,IAAOC,IAAID,IAAO8B,SAAU9C,EAAKuB,KAAOvB,EAAKwB,UAAY,WAAWuB,kBAAkB1B,OAAO,YAIhH,IAzD2B,eAyDnB2B,GACJ,IAAIC,OAAQ,EACZb,EAAOrC,KAAK,SAAAwC,GACR,GAAIA,EAAE3B,OAASxB,EAAU4D,GAAGpC,KACxB,GAAGoC,EAAE,GAAK5D,EAAU4D,GAAGpC,OAASxB,EAAU4D,EAAE,GAAGpC,OAA8B,IAAtBxB,EAAU4D,GAAG/C,OAAyC,IAAxBb,EAAU4D,EAAE,GAAG/C,KAAc,CAC9G,IAAIiD,EAAWlC,IAAOuB,EAAEd,QAAS,SAASN,KAAKH,MAASmB,QAAQ,OAAQ,WACxEc,EAAWjC,IAAOC,IAAID,IAAO8B,SAAkB,EAATI,EAAY,WAAWH,kBAAkB1B,OAAO,SACtFK,QAAQC,IAAIvC,EAAU4D,GAAGpC,KAAO,IAAIqC,QAC/BD,EAAE,GAAK5D,EAAU4D,GAAGpC,OAASxB,EAAU4D,EAAE,GAAGpC,OAA8B,IAAtBxB,EAAU4D,GAAG/C,MACtEgD,EAAWV,EAAEd,QACbC,QAAQC,IAAI,YAAYvC,EAAU4D,GAAGpC,KAAK,IAAIqC,IACzCD,EAAE,GAAK5D,EAAU4D,GAAGpC,OAASxB,EAAU4D,EAAE,GAAGpC,OACjDqC,EAASV,EAAEd,YAIvBnB,EAASJ,KAAK,CACV0B,MAAOxC,EAAU4D,GAAGpB,MACpBC,QAASzC,EAAU4D,GAAGnB,QACtBC,KAAM1C,EAAU4D,GAAGlB,KACnBlB,KAAMxB,EAAU4D,GAAGpC,KACnBmB,QAAS3C,EAAU4D,GAAGjB,QACtB9B,KAAMb,EAAU4D,GAAG/C,KACnBmB,UAAWhC,EAAU4D,GAAG5B,UACxBF,SAAU9B,EAAU4D,GAAG9B,SACvBc,SAAU5C,EAAU4D,GAAGhB,SACvBP,QAASwB,KA1BTD,EAAE,EAAGA,EAAE5D,EAAUoB,OAAQwC,IAAM,EAA/BA,GA6BRtB,QAAQC,IAAIrB,GAEZlB,EAAYkB,EACZf,aAAa0C,QAAQ,WAAW5C,KAAK6C,UAAU9C,IAGnD,SAAS+D,EAAW/C,GACZ,IAAImC,EAAI,EACR,OAAInC,EAAMgD,aAAaC,SAAS,cAAuC,OAAvBjD,EAAMgD,aAE9C,8EAGI,2BAAOE,UAAU,qBACjB,+BACA,4BACI,mCACA,sCACA,4CACA,oDAGJ,+BACClD,EAAMgD,aAAa5C,OAAS,GAC7BJ,EAAMgD,aAAarD,KAAI,SAACC,EAAMa,GAAP,OACnB,4BACI,wBAAIA,IAAKb,EAAKa,IAAK0C,GAAIvD,EAAKuD,GAAIC,MAAO,OAAQjB,KAC/C,wBAAI1B,IAAKb,EAAKa,IAAK0C,GAAIvD,EAAKuD,IAAKvD,EAAK8B,MACtC,wBAAIjB,IAAKb,EAAKa,IAAK0C,GAAIvD,EAAKuD,IAAKvD,EAAK+B,SACtC,wBAAIlB,IAAKb,EAAKa,IAAK0C,GAAIvD,EAAKuD,IAAKvD,EAAK6B,eAQlE,SAAS4B,EAAWrD,GAChB,OACE,6BACI,4BAAQmD,GAAG,QAAX,SAGA,wBAAID,UAAU,OACV,4BACI,uBAAGI,KAAK,KACJ,uBAAGJ,UAAU,mBADjB,8BAGC,4BACD,uBAAGI,KAAK,gBACJ,uBAAGJ,UAAU,mBADjB,0BAIJ,4BACI,uBAAGI,KAAK,SACJ,uBAAGJ,UAAU,sBADjB,0BAIJ,4BACI,uBAAGI,KAAK,SACJ,uBAAGJ,UAAU,sBADjB,0B,IAQZK,E,YACF,WAAYvD,GAAO,IAAD,8BACd,4CAAMA,KAoBVwD,UAAY,SAAAC,GACR,EAAKC,SAAS,CACVC,MAAO,EAAKC,MAAMD,QApBtB,EAAKC,MAAQ,CACTD,MAAM,EACNjC,KAAK,GACLC,QAAS,GACTqB,aAAchE,GAEjB,EAAK6E,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAC3B,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBACxB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBAEjB9E,EAAUoB,QAAU,EACnB,EAAK8D,MAAQ,EAGb,EAAKA,MAAQlF,EAAUA,EAAUoB,OAAO,GAAGoB,MAlBjC,E,8EA0BA2C,GACbC,KAAKV,SAAS,CACVhC,KAAMyC,EAAIE,OAAOC,U,0CAGLH,GAChBC,KAAKV,SAAS,CACV/B,QAASwC,EAAIE,OAAOC,U,uCAGXH,GACbC,KAAKV,SAAS,CACVa,KAAMJ,EAAIE,OAAOC,U,kCAGbH,GACRA,EAAIK,iBAEJ,IADA,IAAIC,EAAK3F,EAAU,EAAE,KACfsF,KAAKR,MAAMZ,aAAaC,SAASwB,IACnCA,EAAK3F,EAAU,EAAE,KAErB,IAAI4F,EAAa,CACbrD,QAAS,QACTG,MAAO4C,KAAKF,MAAM,EAClBzC,QAASgD,EACT/C,KAAM0C,KAAKR,MAAMlC,KACjBlB,KAAM4D,KAAKR,MAAMW,KACjB5C,QAASyC,KAAKR,MAAMjC,QACpB9B,MAAM,EACNmB,UAAWJ,MAASK,OAAO,OAG/B3B,EAAmB,GACnBD,EAAgB,GAChBL,EAAUc,KAAK4E,GACf1F,EAAU2F,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEpE,KAAOqE,EAAErE,KAAQ,EAAKoE,EAAEpE,OAASqE,EAAErE,MAAUoE,EAAEnD,QAAUoD,EAAEpD,QAAW,GAAW,KAE7G1B,IAEAR,EAAkBP,EAAUK,EAAcC,GAE1CH,aAAa0C,QAAQ,WAAY5C,KAAK6C,UAAU9C,IAChDG,aAAa0C,QAAQ,cAAe5C,KAAK6C,UAAUxC,IACnDH,aAAa0C,QAAQ,WAAY5C,KAAK6C,UAAUzC,M,+BAI3C,IAAD,OACL,OAEI,yBAAK6D,UAAU,WACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,YACf,0BAAMA,UAAU,6BAChB,4BACIA,UAAU,gBACVC,GAAG,yBACH2B,QAAS,SAAArB,GACL,EAAKD,UAAUC,KAElB,IANL,eAOY,OAIhB,kBAACsB,EAAA,EAAD,CAAOC,WAAW,EAAOC,QAASb,KAAKZ,UAAWG,KAAMS,KAAKR,MAAMD,KAAMuB,WAAW,GAChF,kBAACH,EAAA,EAAMI,OAAP,KACI,kBAACJ,EAAA,EAAMK,MAAP,CAAajC,GAAG,WAAhB,8BACA,kBAACkC,EAAA,EAAD,CAAQC,QAAQ,OAAOR,QAASV,KAAKZ,WAArC,MAEJ,kBAACuB,EAAA,EAAMQ,KAAP,CAAYpC,GAAG,aACX,kBAAC,IAAD,KACI,kBAAC,IAAKqC,IAAN,KACI,kBAAC,IAAKC,MAAN,CAAYC,SAAUtB,KAAKP,iBAAkB8B,GAAIC,IAAKC,UAAU,iBAC5D,kBAAC,IAAKC,MAAN,eACA,kBAAC,IAAKC,QAAN,CAAcb,WAAW,EAAMc,YAAY,YAE/C,kBAAC,IAAKP,MAAN,CAAYC,SAAUtB,KAAKL,oBAAqB4B,GAAIC,IAAKC,UAAU,iBAC/D,kBAAC,IAAKC,MAAN,qBACA,kBAAC,IAAKC,QAAN,CAAcC,YAAY,kBAE9B,kBAAC,IAAKP,MAAN,CAAYC,SAAUtB,KAAKJ,iBAAkB2B,GAAIC,IAAKC,UAAU,iBAC5D,kBAAC,IAAKC,MAAN,qBACA,kBAAC,IAAKC,QAAN,CAAcJ,GAAG,UACb,iDACCtF,OAAOC,cAAcC,UAAUZ,KAAI,SAASC,GACzC,OACI,4BAAQ0E,MAAO1E,EAAKsB,QAAST,IAAKb,EAAKa,KAClCb,EAAKsB,eAO9B,kBAACmE,EAAA,EAAD,CAAQJ,QAASb,KAAKZ,UAAWsB,QAASV,KAAKH,YAAaqB,QAAQ,UAAUf,KAAK,UAAnF,uB,GA1HP0B,aAqIrB,SAASC,EAASlG,GAiBd,OACI,0BAAMkD,UAAU,aACZ,0BAAMA,UAAU,6BAChB,4BAAQ4B,QAlBhB,SAA4BX,GACxBA,EAAIK,kBACJxF,EAAYgB,EAAMgD,cACR2B,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEpE,KAAOqE,EAAErE,KAAQ,EAAKoE,EAAEpE,OAASqE,EAAErE,MAAUoE,EAAEnD,QAAUoD,EAAEpD,QAAW,GAAW,KAC7GnC,EAAmB,GACnBD,EAAgB,GAChBU,IAGAR,EAFAP,EAAYA,EAAUmH,QAAO,SAACC,EAAIxD,EAAG5D,GAAR,OAAsB4D,IAAM5D,EAAUqH,QAAQD,MAE/C/G,EAAcC,GAC1CH,aAAa0C,QAAQ,WAAY5C,KAAK6C,UAAU9C,IAChDG,aAAa0C,QAAQ,cAAe5C,KAAK6C,UAAUxC,IACnDH,aAAa0C,QAAQ,WAAY5C,KAAK6C,UAAUzC,KAMP8D,GAAG,QAAxC,yC,IAoFGmD,E,YA/EX,WAAYtG,GAAO,IAAD,8BACd,4CAAMA,KACD4D,MAAQ,CACTZ,aAAc,GACduD,MAAO,MAEX,EAAKC,cAAe,EAAKA,cAAc1C,KAAnB,gBANN,E,iFASG,IAAD,OAChBxC,QAAQC,IAAI,aACZ,IACMkF,EAAOtH,aAAaC,QAAQ,YAC7BqH,EAODrC,KAAKV,SAAS,CACVV,aAAc/D,KAAKC,MAAMuH,KAP7BC,IAAEtE,IAHI,eAGK,SAACJ,GACJ,EAAK0B,SAAS,CACVV,aAAchB,S,oCAuBpB2E,GACV,IAAIC,EAAoBxC,KAAKR,MAAMZ,aAAa6D,MAAM,GAEtDD,EAAmB9G,KAAK6G,GAExBvC,KAAKV,SAAS,CACVV,aAAa4D,M,+BAKjBtF,QAAQC,IAAI,UAEZ,OACI,yBAAK4B,GAAI,YACL,yBAAKA,GAAG,WACL,kBAACE,EAAD,OAEH,yBAAKF,GAAG,WACJ,6BACI,yBAAKD,UAAU,yBACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,+BACV,kBAAC,EAAD,CAAQF,aAAcoB,KAAKR,MAAMZ,aAAc8D,QAAS1C,KAAK0C,QAASC,WAAY3C,KAAK2C,WAAYC,QAAS5C,KAAK4C,QAASR,cAAepC,KAAKoC,gBAC9I,kBAACN,EAAD,CAAUlD,aAAcoB,KAAKR,MAAMZ,aAAciE,cAAe7C,KAAK6C,oBAKrF,6BACG,kBAAClE,EAAD,CAAYC,aAAcoB,KAAKR,MAAMZ,eACnCoB,KAAKR,MAAM2C,OACZ,4BAAKnC,KAAKR,MAAM2C,c,GAxEhBN,aCrQTiB,G,kBApEX,WAAYlH,GAAO,IAAD,8BACd,4CAAMA,KACD4D,MAAQ,CACTZ,aAAc,GACduD,MAAO,MAJG,E,iFASdjF,QAAQC,IAAI,aACZ,IAAIqB,EAAE,EACF3C,EAAU,GACVwG,EAAOtH,aAAaC,QAAQ,eAC7BqH,IACCxH,KAAKC,MAAMuH,GAAM9G,KAAI,SAACC,GACdgD,EAAI,KACJtB,QAAQC,IAAI3B,GACZK,EAAQH,KAAKF,GACbgD,QAGRwB,KAAKV,SAAS,CACVV,aAAc/C,O,+BAIjBO,GACL,IAAIW,EAAO,QAMX,OALAlC,KAAKC,MAAMC,aAAaC,QAAQ,aAAaO,KAAI,SAACC,GAC1CY,IAASZ,EAAKY,OACdW,EAAOvB,EAAKyB,YAGbF,I,+BAGPG,QAAQC,IAAI,UACZ,IAAIY,EAAE,EACN,OACI,yBAAKe,UAAU,aACX,kEACA,wBAAIA,UAAU,oBACV,wBAAIA,UAAU,gBACV,yBAAKA,UAAU,eAAf,KACA,yBAAKA,UAAU,aAAf,gBACA,yBAAKA,UAAU,aAAf,sBACA,yBAAKA,UAAU,aAAf,mBAEHkB,KAAKR,MAAMZ,aAAa5C,OAAS,GAClCgE,KAAKR,MAAMZ,aAAarD,KAAI,SAACC,EAAM4B,GAAP,OAE5B,wBAAI2B,GAAI,QAAQhB,EAAG1B,IAAKe,EAAO0B,UAAU,aACrC,yBAAKA,UAAU,YAAYiE,aAAW,KAAKhF,KAC3C,yBAAKe,UAAU,YAAYiE,aAAW,gBAAgBvH,EAAKY,MAC3D,yBAAK0C,UAAU,YAAYiE,aAAW,sBAAiBvH,EAAK6B,SAC5D,yBAAKyB,UAAU,YAAYiE,aAAW,kBAAkBvH,EAAKyB,cAKpE+C,KAAKR,MAAM2C,OACZ,4BAAKnC,KAAKR,MAAM2C,Y,GA9DHN,cCAzBjH,EAA8D,OAAjDC,KAAKC,MAAMC,aAAaC,QAAQ,aAAyBH,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,GACrHC,EAAiE,OAAjDJ,KAAKC,MAAMC,aAAaC,QAAQ,aAAyBH,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,GACxHE,EAAuE,OAApDL,KAAKC,MAAMC,aAAaC,QAAQ,gBAA4BH,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,GAEjIgI,EAAY,eACZC,EAAW,QACXC,EAAW,QACXC,EAAY,IA6GhB,SAASlE,EAAWrD,GAEhB,OADAsB,QAAQC,IAAIlB,OAAOmH,SAASC,UAExB,yBAAKvE,UAAU,UACX,4BAAQC,GAAG,QAAX,SAGA,wBAAID,UAAU,OACV,4BACI,uBAAGI,KAAMiE,GACL,uBAAGrE,UAAU,mBADjB,8BAGC,4BACD,uBAAGI,KAAM8D,GACL,uBAAGlE,UAAU,mBADjB,0BAIJ,4BACI,uBAAGI,KAAM+D,GACL,uBAAGnE,UAAU,sBADjB,0BAIJ,4BACI,uBAAGI,KAAMgE,GACL,uBAAGpE,UAAU,sBADjB,0BASpB,SAASwE,EAAO1H,GAIZ,OACI,6BACI,yBAAKkD,UAAU,SACX,0BAAMA,UAAU,+BAChB,4BACIxB,KAAK,aACLyB,GAAG,aACHmB,MAAOtE,EAAM2H,YACbjC,SAXhB,SAAoBvB,GAChBnE,EAAM4H,gBAAgB,CAAED,YAAaxD,EAAIE,OAAOC,UAWpC,4BAAQA,MAAM,IAAd,WAGCjE,OAAOC,cAAcC,UAAUZ,KAAI,SAASC,GACzC,OACI,4BAAQ0E,MAAO1E,EAAKsB,QAAST,IAAKb,EAAKa,KAClCb,EAAKsB,eAUtC,SAAS6B,EAAY/C,GACb,OACI,4BACI,wBAAIS,IAAKT,EAAMS,IAAK0C,GAAInD,EAAMmD,GAAIC,MAAO,OAAQpD,EAAM6H,SACvD,wBAAIpH,IAAKT,EAAMS,IAAK0C,GAAInD,EAAMmD,IAAKnD,EAAM0B,MACzC,wBAAIjB,IAAKT,EAAMS,IAAK0C,GAAInD,EAAMmD,IAAKnD,EAAM2B,SACzC,wBAAIlB,IAAKT,EAAMS,IAAK0C,GAAInD,EAAMmD,IAAKnD,EAAMyB,SAIzC,4BAAI,4BAAQyB,UAAU,yBAAyBC,GAAG,aAAa2B,QAAS9E,EAAM8H,oB,IAqK/EC,E,YA9JX,WAAY/H,GAAO,IAAD,8BACd,4CAAMA,KAiBVgI,UAAW,SAACvB,GACRnF,QAAQC,IAAIkF,GACZ,EAAK/C,SAAS,CAACV,aAAcyD,KApBf,EAkClBwB,WAAa,SAAAC,GACT,EAAKxE,UAAS,gBAAGV,EAAH,EAAGA,aAAH,MAAuB,CACjCA,aAAuBA,EAAamD,QAAO,SAACgC,EAAQ3G,GAAT,OAAmBA,IAAU0G,SAGpF5G,QAAQC,IAAI,EAAKqC,QArCT,EAAKA,MAAQ,CACTZ,aAAc,GACduD,MAAO,KACPoB,YAAa,GACbS,YAAY,GAEhB,EAAKR,gBAAkB,EAAKA,gBAAgB9D,KAArB,gBAEpBxE,EAAiBc,QAAU,EAC1B,EAAK8D,MAAQ,EAGb,EAAKA,MAAQ5E,EAAiBA,EAAiBc,OAAO,GAAGoB,MAd/C,E,iFAuBdF,QAAQC,IAAI,aACZ,IAEIkF,EAAOtH,aAAaC,QAAQ,eAC5BqH,GACIrC,KAAKV,SAAS,CACVV,aAAc/D,KAAKC,MAAMuH,O,sCA2BxBjF,GACb,IACItB,EADAD,EAAU,GAERwG,EAAOtH,aAAaC,QAAQ,YAElCgF,KAAKR,MAAMZ,aAAarD,KAAI,SAACC,GACrBA,EAAK4B,QAAUA,GACf5B,EAAKC,MAAO,EACZR,EAAcS,KAAKF,IAEnBK,EAAQH,KAAKF,MAGrBM,EAAWb,EAAcgJ,OAAOpI,GAE7BwG,IACCtH,aAAa0C,QAAQ,cAAc5C,KAAK6C,UAAU7B,IAClDd,aAAa0C,QAAQ,WAAW5C,KAAK6C,UAAUzC,KAjQ3D,SAAyBiJ,EAAMC,GAC3B,IAAIrI,EAAW,GACXD,EAAU,GAEXsI,EAAOnI,QAAU,GAChBmI,EAAO5I,KAAI,SAACC,GACRS,OAAOC,cAAcC,UAAUZ,KAAI,SAACa,GAC5BA,EAAKC,MAAQb,EAAKY,KAAKE,eAA8B,GAAbd,EAAKC,OAC7CyB,QAAQC,IAAI3B,GACZM,EAASJ,KAAK,CACV0B,MAAO5B,EAAK4B,MACZC,QAAS7B,EAAK6B,QACdC,KAAM9B,EAAK8B,KACXlB,KAAMZ,EAAKY,KACXmB,QAAS/B,EAAK+B,QACd9B,KAAMD,EAAKC,KACXmB,UAAWpB,EAAKoB,UAChBF,SAAUF,IAASK,OAAO,SAC1BW,SAAUhB,MAAWA,EAAOA,IAASK,OAAO,SAAU,SAASF,KAAKH,EAAOhB,EAAKoB,UAAW,WAAWC,OAAO,WAGjHhB,EAAQH,KAAK,CACTU,KAAMA,EAAKU,QACXC,KAAMP,MAAWA,EAAOA,IAASK,OAAO,SAAU,SAASF,KAAKH,EAAOhB,EAAKoB,UAAW,WAAWC,OAAO,SACzGG,UAAW,EACXC,QAAS,WAO9BC,QAAQC,IAAItB,GAEXd,aAAa0C,QAAQ,WAAW5C,KAAK6C,UAAU5B,IAC/CoB,QAAQC,IAAIrB,GACZ,IAAIsI,EAAWF,EAAMnC,QAAO,SAACC,EAAIxD,EAAG1C,GAAR,OAAqB0C,IAAM1C,EAASmG,QAAQD,MAGxEnG,EAAQN,KAAI,SAACC,GACTA,EAAKuB,KAAOP,EAAOhB,EAAKuB,KAAM,SAASJ,KAAKH,IAASmB,QAAQ,OAAQ,cAGzE,IAAMC,EAAM,YAAO/B,EAAQgC,QAAO,SAACC,EAAGC,GAClC,IAAM1B,EAAM0B,EAAE3B,KAERZ,EAAOsC,EAAEE,IAAI3B,IAAQ4B,OAAOC,OAAO,GAAIH,EAAG,CAC5ChB,KAAM,EACNC,UAAW,IAKf,OAHAxB,EAAKuB,MAAQgB,EAAEhB,KACfvB,EAAKwB,WAAae,EAAEf,UAEbc,EAAEK,IAAI9B,EAAKb,KACnB,IAAI4C,KAAKC,UAGZT,EAAOrC,KAAI,SAACC,GACRA,EAAKyB,QAAUT,MAAWA,WAAiBhB,EAAKuB,KAAOvB,EAAKwB,UAAY,WAAWuB,kBAAkB1B,OAAO,YAEhHK,QAAQC,IAAIS,GACZ,IAAIa,EAAW,QAEf7D,EAAYwJ,EAASH,OAAOnI,GAE5B,IADA,IAAIuI,EAAW,GAhEmB,WAiE1B7F,GACJZ,EAAOrC,KAAK,SAAAwC,GACR,GAAIA,EAAE3B,OAASxB,EAAU4D,GAAGpC,KACxB,GAAGoC,EAAE,GAAK5D,EAAU4D,GAAGpC,OAASxB,EAAU4D,EAAE,GAAGpC,MAA6B,GAArBxB,EAAU4D,GAAG/C,MAAwC,GAAvBb,EAAU4D,EAAE,GAAG/C,KAAc,CAC9G,IAAIiD,EAAWlC,EAAOuB,EAAEd,QAAS,SAASN,KAAKH,IAASmB,QAAQ,OAAQ,WACxEc,EAAWjC,MAAWA,WAAyB,EAATkC,EAAY,WAAWH,kBAAkB1B,OAAO,SACtFK,QAAQC,IAAIvC,EAAU4D,GAAGpC,KAAO,IAAIqC,QAC/BD,EAAE,GAAK5D,EAAU4D,GAAGpC,OAASxB,EAAU4D,EAAE,GAAGpC,OAA8B,IAAtBxB,EAAU4D,GAAG/C,KACtEgD,EAAWV,EAAEd,QACRuB,EAAE,GAAK5D,EAAU4D,GAAGpC,OAASxB,EAAU4D,EAAE,GAAGpC,OACjDqC,EAASV,EAAEd,YAIvBoH,EAAS3I,KAAK,CACV0B,MAAOxC,EAAU4D,GAAGpB,MACpBC,QAASzC,EAAU4D,GAAGnB,QACtBC,KAAM1C,EAAU4D,GAAGlB,KACnBlB,KAAMxB,EAAU4D,GAAGpC,KACnBmB,QAAS3C,EAAU4D,GAAGjB,QACtB9B,KAAMb,EAAU4D,GAAG/C,KACnBmB,UAAWhC,EAAU4D,GAAG5B,UACxBF,SAAU9B,EAAU4D,GAAG9B,SACvBc,SAAU5C,EAAU4D,GAAGhB,SACvBP,QAASwB,KAxBTD,EAAE,EAAGA,EAAE5D,EAAUoB,OAAQwC,IAAM,EAA/BA,GA2BR5D,EAAYyJ,EACZpJ,EAAgBa,EAChBsI,EAAYC,EAAStC,QAAO,SAAAuC,GAAI,OAAiB,GAAbA,EAAK7I,QACzCP,EAAmBkJ,EACnBrJ,aAAa0C,QAAQ,WAAW5C,KAAK6C,UAAU2G,IAC/CtJ,aAAa0C,QAAQ,cAAc5C,KAAK6C,UAAU0G,IAkK9CG,CAAe1I,EAAQC,GACvBkE,KAAKV,SAAS,CACVV,aAAc/C,M,sCAINO,GACZ4D,KAAKV,SAASlD,EAAM4D,KAAKwE,oB,yCAGzB,IAAIC,EACEpC,EAAOtH,aAAaC,QAAQ,eAW9ByJ,EAVApC,EAUiBxH,KAAKC,MAAMuH,GAAMN,OAC9B,SAAU2C,GACN,MACgC,KAA3B1E,KAAKR,MAAM+D,aACRmB,EAAOtI,OAAS4D,KAAKR,MAAM+D,aAErC7D,KAAKM,OAfM9E,EAAiB6G,OAC9B,SAAU2C,GACN,MACmC,KAA3B1E,KAAKR,MAAM+D,aACXmB,EAAOtI,OAAS4D,KAAKR,MAAM+D,aAErC7D,KAAKM,OAYfA,KAAKV,SAAS,CACVV,aAAc6F,M,+BAGb,IAAD,OACJvH,QAAQC,IAAI,UAEZ,IAAIY,EAAE,EACN,OACI,yBAAKgB,GAAI,YACL,yBAAKA,GAAG,WACJ,kBAAC,EAAD,OAEJ,yBAAKA,GAAG,WACJ,6BACI,yBAAKD,UAAU,yBACX,yBAAKA,UAAU,wBACX,wBAAIA,UAAU,+BACV,kBAACwE,EAAD,CAAQ1E,aAAcoB,KAAKR,MAAMZ,aAAc2E,YAAavD,KAAKR,MAAM+D,YAAaC,gBAAiBxD,KAAKwD,sBAK1H,6BACI,2BAAO1E,UAAU,qBACb,+BACA,4BACI,mCACA,sCACA,4CACA,kDACA,4CAGJ,+BACCkB,KAAKR,MAAMZ,aAAa5C,OAAS,GAClCgE,KAAKR,MAAMZ,aAAarD,KAAI,SAACC,EAAKa,GAAN,OACxB,kBAAC,EAAD,CAAYmH,gBAAiB,EAAKA,gBAAiBpG,MAAO5B,EAAK4B,MAAOqG,QAAS1F,IAAKT,KAAM9B,EAAK8B,KAAMC,QAAS/B,EAAK+B,QAASF,QAAS7B,EAAK6B,QAAS2G,WAAYxI,EAAKwI,WAAY3H,IAAKA,EAAK0C,GAAI1C,EAAKqH,gBAAiB,EAAKA,gBAAgBhE,KAAK,EAAKlE,EAAK4B,OAAQyF,cAAe,EAAKA,qBAK3R7C,KAAKR,MAAM2C,OACZ,4BAAKnC,KAAKR,MAAM2C,c,GAtJjBN,a,cCjMPrF,IAASmI,IADd,IACwB,WACnC,SAASC,EAAShJ,GACd,OACI,yBAAKmD,GAAG,aACJ,2BAAOA,GAAG,aAAaD,UAAU,cAAjC,8BACJ,0BAAMC,GAAG,aACL,2BAAOD,UAAU,gBAAgB+F,QAAQ,gBAAzC,sBACA,2BAAOC,QAASlJ,EAAMmJ,mBAAoB5E,KAAK,OAAOrB,UAAU,aAAaC,GAAG,gBAChF,4BAAQoB,KAAK,SAASO,QAAS9E,EAAMoJ,gBAAiBlG,UAAU,qBAAhE,iBAWZ,SAASmG,EAAcrJ,GAAO,IAAD,EACKsJ,mBAAStJ,EAAMuJ,SADpB,mBAClBA,EADkB,KACTC,EADS,KAqBzB,OARAC,qBAAU,WACN,IAAMC,EAAWC,aAAY,WACzBH,GAAW,SAAAD,GAAO,OAAIA,EAAU,OACjC,KACH,OAAO,kBAAMK,cAAcF,MAC5B,IAIK,uBAAGvG,GAAG,SAASD,UAAU,cApBjC,SAAsB2G,GAClBA,EAAIC,OAAOD,GACX,IAAIE,EAAIC,KAAKC,MAAMJ,EAAI,MACnBK,EAAIF,KAAKC,MAAMJ,EAAI,KAAO,IAC1BM,EAAIH,KAAKC,MAAMJ,EAAI,KAAO,IAK9B,OAHeE,EAAI,EAAIA,EAAK,IAAO,QACpBG,EAAI,EAAIA,EAAK,IAAO,QACpBC,EAAI,EAAIA,EAAK,GAAM,MAazBC,CAAab,I,IAyHfc,E,YApHX,WAAYrK,GAAQ,IAAD,8BACf,4CAAMA,KACD4D,MAAQ,CACTZ,aAAc/D,KAAKC,MAAMC,aAAaC,QAAQ,gBAC9CmH,MAAO,KACP+D,OAAQ,EACRnJ,KAAM,GACNoJ,YAAa,EACbC,UAAW,GACXC,YAAY,EACZC,QAAQ,EACRC,OAAO,GAEX,EAAKxB,mBAAqB,EAAKA,mBAAmBrF,KAAxB,gBAC1B,EAAK8G,cAAgB,EAAKA,cAAc9G,KAAnB,gBAdN,E,gFAkBAK,GACfC,KAAKV,SAAS,CACV4G,OAAQnG,EAAIE,OAAOC,U,sCAGXH,GACZA,EAAIK,iBAEJqG,SAASC,eAAe,cAAcC,MAAM7J,QAAU,OAItD,IAHA,IAAI8J,EAAW5G,KAAKR,MAAMZ,aACtBsH,EAASW,SAASJ,SAASC,eAAe,eAAexG,OAErD1B,EAAE,EAAGA,EAAEoI,EAAS5K,OAAQwC,IACzBoI,EAASpI,GAAGnB,UAAY6I,EACnB1H,EAAIoI,EAAS5K,SACT4K,EAASpI,GAAGpC,KAAK6F,QAAQ2E,EAASpI,EAAI,GAAGpC,OAAS,GAClDc,QAAQC,IAAIyJ,EAASpI,GAAGpC,KAAO,IAAMwK,EAASpI,EAAI,GAAGpC,MACrD4D,KAAKV,SAAS,CACV4G,OAAQU,EAASpI,GAAGnB,QACpBN,KAAM6J,EAASpI,GAAGvB,QAClBkJ,YAAaS,EAASpI,EAAI,GAAGnB,QAC7B+I,UAAWQ,EAASpI,EAAI,GAAGvB,QAC3BsJ,OAAO,MAGXrJ,QAAQC,IAAIyJ,EAASpI,GAAGnB,SACxB2C,KAAKV,SAAS,CACV4G,OAAQU,EAASpI,GAAGnB,QACpBN,KAAM6J,EAASpI,GAAGvB,QAClBkJ,YAAa,EACbC,UAAW,QACXG,OAAO,MAOnBvG,KAAKV,SAAS,CACViH,OAAM,IAIlBvG,KAAK8G,iBACoB,IAAtB9G,KAAKR,MAAM0G,SACVlG,KAAK+G,cACL/G,KAAKgH,mB,uCAKThH,KAAKV,SAAS,CACV+G,YAAY,M,oCAIhBrG,KAAKV,SAAS,CACV+G,YAAY,M,sCAIhBrG,KAAKV,SAAS,CACViH,OAAO,M,sCAIXvG,KAAKV,SAAS,CACVgH,QAAQ,M,+BAKZ,OADApJ,QAAQC,IAAI6C,KAAKR,OAEb,6BACMQ,KAAKR,MAAM6G,WACT,yBAAKtH,GAAG,cAAcD,UAAU,6BAChC,yBAAKA,UAAU,aACX,wBAAIA,UAAU,aAAd,qCAA8CkB,KAAKR,MAAM0G,QACzD,yBAAKpH,UAAU,eACX,uBAAGA,UAAU,SAAb,6BAEIkB,KAAKR,MAAM8G,OACP,kBAACrB,EAAD,CAAeE,QAAS3I,EAAOwD,KAAKR,MAAM4G,UAAW,SAASzJ,KAAKH,IAASmB,QAAQ,OAAQ,aAC5F,kBAACsH,EAAD,CAAeE,QAAS3I,EAAOwD,KAAKR,MAAMzC,KAAM,SAASJ,KAAKH,IAASmB,QAAQ,OAAQ,aAE/F,4BAAQ+C,QAASV,KAAKwG,cAAezH,GAAG,YAAYoB,KAAK,SAASrB,UAAU,mBAA5E,qBAGFkB,KAAKR,MAAM+G,MAAQ,yBAAKzH,UAAU,aACxC,wBAAIA,UAAU,aAAd,uCACK,KACT,kBAAC8F,EAAD,CAAUG,mBAAoB/E,KAAK+E,mBAAoBC,gBAAiBhF,KAAKgF,gBAAgBtF,KAAKM,a,GA9G1F6B,aC1BToF,E,iLAbP,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAKC,UAAWlF,IACnC,kBAAC,IAAD,CAAOgF,OAAK,EAACC,KAAM,eAAgBC,UAAWtE,IAC9C,kBAAC,IAAD,CAAOoE,OAAK,EAACC,KAAM,QAASC,UAAWC,IACvC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAM,QAASC,UAAWE,U,GARzCzF,aCEE0F,QACW,cAA7BtL,OAAOmH,SAASoE,UAEe,UAA7BvL,OAAOmH,SAASoE,UAEhBvL,OAAOmH,SAASoE,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASlB,SAASC,eAAe,SD2H3C,kBAAmBkB,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.bc08032a.chunk.js","sourcesContent":["import React, {Component,  useState} from 'react';\r\nimport '../app-style.css';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport $ from 'jquery';\r\nimport moment from \"moment\";\r\n//-------if saving to backend server -------\r\n//import restApi from '';\r\n//-----------------------------------------------\r\n\r\nconst randomInt = require('random-int');\r\n\r\nexport let peopleArr =  JSON.parse(localStorage.getItem('listCopy')) !== null ?  JSON.parse(localStorage.getItem('listCopy')) : [];\r\nexport let peopleDoneArr = JSON.parse(localStorage.getItem('listDone')) !== null ?  JSON.parse(localStorage.getItem('listDone')) : [];\r\nexport let peopleNotDoneArr = JSON.parse(localStorage.getItem('listNotDone')) !== null ?  JSON.parse(localStorage.getItem('listNotDone')) : [];\r\nfunction FilterDoneNotDone(arr1, arr2,arr3){\r\n    arr1.map((item)=>{\r\n        if(item.bool === true){\r\n            arr2.push(item);\r\n        }else {\r\n            arr3.push(item);\r\n        }\r\n    })\r\n}\r\nfunction CalcTimeOnSave (props){\r\n\r\n    let tempArr = [];\r\n    let tempArr2 = [];\r\n    let temp = peopleArr;\r\n    if(temp.length !== 0) {\r\n        temp.map((item) => {\r\n            window.SpecDirectory.specTypes.map((spec) => {\r\n                if (spec.key === item.spec.toLowerCase() && item.bool === true) {\r\n                    let subtr = moment.utc(moment(item.timeDone, \"HH:mm\").diff(moment(item.timeAdded, \"HH:mm\"))).format(\"HH:mm\")\r\n                    tempArr.push({\r\n                        spec: spec.display,\r\n                        time: subtr,\r\n                        instances: 1,\r\n                        avgTime: 0\r\n                    })\r\n                    console.log(spec.display+\" \"+subtr);\r\n                    tempArr2.push({\r\n                        index: item.index,\r\n                        qNumber: item.qNumber,\r\n                        name: item.name,\r\n                        spec: item.spec,\r\n                        surname: item.surname,\r\n                        bool: item.bool,\r\n                        timeAdded: item.timeAdded,\r\n                        timeDone: item.timeDone,\r\n                        timeLast: subtr\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    localStorage.setItem('listDone',JSON.stringify(tempArr2));\r\n    tempArr2 = [];\r\n    console.log(localStorage.getItem('listDone'))\r\n    tempArr.map((item) => {\r\n        item.time = moment(item.time, \"HH:mm\").diff(moment().startOf(\"day\"), \"seconds\");\r\n    })\r\n    const result = [...tempArr.reduce((r, o) => {\r\n        const key = o.spec;\r\n\r\n        const item = r.get(key) || Object.assign({}, o, {\r\n            time: 0,\r\n            instances: 0\r\n        });\r\n        item.time += o.time;\r\n        item.instances += o.instances;\r\n\r\n        return r.set(key, item);\r\n    }, new Map).values()];\r\n\r\n    result.map((item) => {\r\n        item.avgTime = moment.utc(moment.duration((item.time / item.instances), \"seconds\").asMilliseconds()).format(\"HH:mm\")\r\n\r\n    })\r\n\r\n    for(let i=0; i<peopleArr.length; i++) {\r\n        let tempTime;\r\n        result.map((o => {\r\n            if (o.spec === peopleArr[i].spec) {\r\n                if(i>0 && peopleArr[i].spec === peopleArr[i-1].spec && peopleArr[i].bool !== true && peopleArr[i-1].bool !== true){\r\n                    let temptemp = moment(o.avgTime, \"HH:mm\").diff(moment().startOf(\"day\"), \"seconds\");\r\n                    tempTime = moment.utc(moment.duration(temptemp*2, \"seconds\").asMilliseconds()).format(\"HH:mm\")\r\n                    console.log(peopleArr[i].spec + \" \"+tempTime)\r\n                }else if(i>0 && peopleArr[i].spec === peopleArr[i-1].spec && peopleArr[i].bool === true){\r\n                    tempTime = o.avgTime;\r\n                    console.log(\"else if: \"+peopleArr[i].spec+\" \"+tempTime);\r\n                }else if(i>0 && peopleArr[i].spec !== peopleArr[i-1].spec){\r\n                    tempTime=o.avgTime;\r\n                }\r\n            }\r\n        }))\r\n        tempArr2.push({\r\n            index: peopleArr[i].index,\r\n            qNumber: peopleArr[i].qNumber,\r\n            name: peopleArr[i].name,\r\n            spec: peopleArr[i].spec,\r\n            surname: peopleArr[i].surname,\r\n            bool: peopleArr[i].bool,\r\n            timeAdded: peopleArr[i].timeAdded,\r\n            timeDone: peopleArr[i].timeDone,\r\n            timeLast: peopleArr[i].timeLast,\r\n            avgTime: tempTime\r\n        })\r\n    }\r\n    console.log(tempArr2);\r\n\r\n    peopleArr = tempArr2;\r\n    localStorage.setItem('listCopy',JSON.stringify(peopleArr));\r\n\r\n}\r\nfunction PatientRow(props) {\r\n        let o = 1;\r\n        if (props.listOfPeople.includes('<!DOCTYPE') || props.listOfPeople === null) {\r\n            return (\r\n                <p>Nepavyko nuskaityti lankytojų duomenų</p>\r\n            )\r\n        } else {\r\n            return (<table className=\"table table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Nr.</th>\r\n                        <th>Vardas</th>\r\n                        <th>Pavardė</th>\r\n                        <th>Eilės numeris</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {props.listOfPeople.length > 0 &&\r\n                    props.listOfPeople.map((item, key) => (\r\n                        <tr>\r\n                            <th key={item.key} id={item.id} scope={\"row\"}>{o++}</th>\r\n                            <td key={item.key} id={item.id}>{item.name}</td>\r\n                            <td key={item.key} id={item.id}>{item.surname}</td>\r\n                            <td key={item.key} id={item.id}>{item.qNumber}</td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n            );\r\n        }\r\n}\r\nfunction SideBarNav(props){\r\n    return (\r\n      <div>\r\n          <header id=\"menu\">\r\n              Meniu\r\n          </header>\r\n          <ul className=\"nav\">\r\n              <li>\r\n                  <a href=\"/\">\r\n                      <i className=\"zmdi zmdi-link\"></i> Administracinis puslapis\r\n                  </a>\r\n              </li><li>\r\n                  <a href=\"/light-board\">\r\n                      <i className=\"zmdi zmdi-link\"></i> Švieslentė\r\n                  </a>\r\n              </li>\r\n              <li>\r\n                  <a href=\"/spec\">\r\n                      <i className=\"zmdi zmdi-widgets\"></i> Specialisto puslapis\r\n                  </a>\r\n              </li>\r\n              <li>\r\n                  <a href=\"/user\">\r\n                      <i className=\"zmdi zmdi-widgets\"></i> Lankytojo puslapis\r\n                  </a>\r\n              </li>\r\n          </ul>\r\n      </div>\r\n    );\r\n}\r\nclass AddNew extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            show: false,\r\n            name:\"\",\r\n            surname: \"\",\r\n            listOfPeople: peopleArr\r\n        }\r\n         this.handleNameChange = this.handleNameChange.bind(this);\r\n         this.handleSurnameChange = this.handleSurnameChange.bind(this);\r\n         this.handleTypeChange = this.handleTypeChange.bind(this);\r\n         this.postPatient = this.postPatient.bind(this);\r\n\r\n        if(peopleArr.length <= 1){\r\n            this.count = 1;\r\n        }\r\n        else {\r\n            this.count = peopleArr[peopleArr.length-1].index;\r\n        }\r\n    }\r\n    showModal = e => {\r\n        this.setState({\r\n            show: !this.state.show\r\n        });\r\n    };\r\n     handleNameChange(evt){\r\n         this.setState({\r\n             name: evt.target.value\r\n         })\r\n     }\r\n     handleSurnameChange(evt){\r\n         this.setState({\r\n             surname: evt.target.value\r\n         })\r\n     }\r\n     handleTypeChange(evt) {\r\n         this.setState({\r\n             type: evt.target.value\r\n         })\r\n     }\r\n     postPatient(evt){\r\n         evt.preventDefault();\r\n         let qNum=randomInt(1,500);\r\n         while(this.state.listOfPeople.includes(qNum)){\r\n             qNum=randomInt(1,500);\r\n         }\r\n         var newPatient = {\r\n             avgTime: \"00:00\",\r\n             index: this.count+1,\r\n             qNumber: qNum,\r\n             name: this.state.name,\r\n             spec: this.state.type,\r\n             surname: this.state.surname,\r\n             bool: false,\r\n             timeAdded: moment().format('LT')\r\n     };\r\n         //console.log(localStorage.getItem(''));\r\n         peopleNotDoneArr = [];\r\n         peopleDoneArr = [];\r\n         peopleArr.push(newPatient);\r\n         peopleArr.sort((a, b) => (a.spec > b.spec) ? 1 : (a.spec === b.spec) ? ((a.qNumber > b.qNumber) ? 1 : -1) : -1 )\r\n\r\n         CalcTimeOnSave(this);\r\n\r\n         FilterDoneNotDone(peopleArr,peopleDoneArr,peopleNotDoneArr);\r\n\r\n         localStorage.setItem(\"listCopy\", JSON.stringify(peopleArr));\r\n         localStorage.setItem(\"listNotDone\", JSON.stringify(peopleNotDoneArr));\r\n         localStorage.setItem(\"listDone\", JSON.stringify(peopleDoneArr));\r\n\r\n\r\n     }\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"nav-top\">\r\n                <div className=\"button-class\">\r\n                    <div className=\"move-btn\">\r\n                    <span className=\"glyphicon glyphicon-plus\"></span>\r\n                    <button\r\n                        className=\"toggle-button\"\r\n                        id=\"centered-toggle-button\"\r\n                        onClick={e => {\r\n                            this.showModal(e);\r\n                        }}>\r\n                        {\" \"}\r\n                        Pridėti{\" \"}\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n                <Modal animation={false} onClose={this.showModal} show={this.state.show} autoFocus={false}>\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"add-new\">Pridėti pacientą</Modal.Title>\r\n                        <Button variant=\"link\" onClick={this.showModal}>X</Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body id=\"hide-this\">\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group onChange={this.handleNameChange} as={Col} controlId=\"formGridState\">\r\n                                    <Form.Label>Vardas</Form.Label>\r\n                                    <Form.Control autoFocus={true} placeholder=\"Vardas\"/>\r\n                                </Form.Group>\r\n                                <Form.Group onChange={this.handleSurnameChange} as={Col} controlId=\"formGridState\">\r\n                                    <Form.Label>Pavardė</Form.Label>\r\n                                    <Form.Control placeholder=\"Pavardė\"/>\r\n                                </Form.Group>\r\n                                <Form.Group onChange={this.handleTypeChange} as={Col} controlId=\"formGridState\">\r\n                                    <Form.Label>Specialistas</Form.Label>\r\n                                    <Form.Control as=\"select\">\r\n                                        <option>Pasirinkti...</option>\r\n                                        {window.SpecDirectory.specTypes.map(function(item) {\r\n                                            return (\r\n                                                <option value={item.display} key={item.key}>\r\n                                                    {item.display}\r\n                                                </option>\r\n                                            );\r\n                                        })}\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Button onClose={this.showModal} onClick={this.postPatient} variant=\"primary\" type=\"submit\">\r\n                                Patvirtinti\r\n                            </Button>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction SaveList(props) {\r\n\r\n    function saveToLocalStorage(evt) {\r\n        evt.preventDefault();\r\n        peopleArr = props.listOfPeople;\r\n        peopleArr.sort((a, b) => (a.spec > b.spec) ? 1 : (a.spec === b.spec) ? ((a.qNumber > b.qNumber) ? 1 : -1) : -1 )\r\n        peopleNotDoneArr = [];\r\n        peopleDoneArr = [];\r\n        CalcTimeOnSave(props);\r\n        peopleArr = peopleArr.filter((el, i, peopleArr) => i === peopleArr.indexOf(el));\r\n\r\n        FilterDoneNotDone(peopleArr,peopleDoneArr,peopleNotDoneArr);\r\n        localStorage.setItem(\"listCopy\", JSON.stringify(peopleArr));\r\n        localStorage.setItem(\"listNotDone\", JSON.stringify(peopleNotDoneArr));\r\n        localStorage.setItem(\"listDone\", JSON.stringify(peopleDoneArr));\r\n    }\r\n\r\n    return (\r\n        <span className=\"save-span\">\r\n            <span className=\"glyphicon glyphicon-save\"></span>\r\n            <button onClick={saveToLocalStorage} id=\"save\">Išsaugoti sąrašą</button>\r\n        </span>\r\n    );\r\n}\r\nclass AdminPage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            listOfPeople: [],\r\n            error: null\r\n        }\r\n        this.addNewPatient =this.addNewPatient.bind(this);\r\n       // this.updatePatient =this.updatePatient.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        console.log('did mount')\r\n        let url = './data.json';\r\n        const data = localStorage.getItem('listCopy');\r\n        if (!data) {\r\n            $.get(url, (result) => {\r\n                    this.setState({\r\n                        listOfPeople: result,\r\n                    });\r\n            });\r\n        } else {\r\n            this.setState({\r\n                listOfPeople: JSON.parse(data)\r\n            });\r\n        }\r\n}/*\r\n//-------if saving to backend server -------\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = this.state.listCopy;\r\n        restApi.post('/', data)\r\n            .then(res => {\r\n                // success\r\n            })\r\n            .catch(err => {\r\n                this.setState({ errorMessage: err });\r\n            });\r\n    };*/\r\n//----------------------------------------\r\n    addNewPatient(status){\r\n        var updatedPatientList =this.state.listOfPeople.slice(0);\r\n\r\n        updatedPatientList.push(status);\r\n\r\n        this.setState({\r\n            listOfPeople:updatedPatientList\r\n        });\r\n\r\n    }\r\n    render(){\r\n        console.log('render');\r\n        let o=0;\r\n        return (\r\n            <div id={\"viewport\"}>\r\n                <div id=\"sidebar\">\r\n                   <SideBarNav />\r\n                </div>\r\n                <div id=\"content\">\r\n                    <div>\r\n                        <nav className=\"navbar navbar-default\">\r\n                            <div className=\"container-fluid\">\r\n                                <ul className=\"nav navbar-nav navbar-right\">\r\n                                    <AddNew listOfPeople={this.state.listOfPeople} newName={this.newName} newSurname={this.newSurname} newType={this.newType} addNewPatient={this.addNewPatient}/>\r\n                                    <SaveList listOfPeople={this.state.listOfPeople} updatePatient={this.updatePatient} />\r\n                                </ul>\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n                    <div>\r\n                       <PatientRow listOfPeople={this.state.listOfPeople}/>\r\n                        {this.state.error &&\r\n                        <h3>{this.state.error}</h3>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AdminPage;","/*index.jsx*/\r\nimport React, {Component} from 'react';\r\nimport '../board-style.css';\r\n\r\n\r\nclass LightBoardPage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            listOfPeople: [],\r\n            error: null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('did mount')\r\n        let i=0;\r\n        let tempArr = [];\r\n        var data = localStorage.getItem('listNotDone');\r\n        if(data) {\r\n            JSON.parse(data).map((item) => {\r\n                if (i < 10) {\r\n                    console.log(item);\r\n                    tempArr.push(item);\r\n                    i++;\r\n                }\r\n            })\r\n            this.setState({\r\n                listOfPeople: tempArr\r\n            })\r\n        }\r\n    }\r\n    findTime(spec){\r\n        let time = \"00:00\"\r\n        JSON.parse(localStorage.getItem('timeList')).map((item)=> {\r\n            if (spec === item.spec) {\r\n                time = item.avgTime;\r\n            }\r\n        });\r\n        return time;\r\n    }\r\n    render(){\r\n        console.log('render');\r\n        let o=1;\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>Laukiantieji pas specialistą </h2>\r\n                <ol className=\"responsive-table\">\r\n                    <li className=\"table-header\">\r\n                        <div className=\"col col-1-1\">#</div>\r\n                        <div className=\"col col-2\">Specialistas</div>\r\n                        <div className=\"col col-3\">Eilės numeris</div>\r\n                        <div className=\"col col-4\">Laukimo laikas</div>\r\n                    </li>\r\n                    {this.state.listOfPeople.length > 0 &&\r\n                    this.state.listOfPeople.map((item, index) => (\r\n\r\n                    <li id={\"list-\"+o} key={index} className=\"table-row\">\r\n                        <div className=\"col col-1\" data-label=\"#\">{o++}</div>\r\n                        <div className=\"col col-2\" data-label=\"Specialistas\">{item.spec}</div>\r\n                        <div className=\"col col-3\" data-label=\"Eilės numeris\">{item.qNumber}</div>\r\n                        <div className=\"col col-4\" data-label=\"Laukimo laikas\">{item.avgTime}</div>\r\n                    </li>\r\n                        ))}\r\n                </ol>\r\n\r\n                {this.state.error &&\r\n                <h3>{this.state.error}</h3>\r\n                }\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default LightBoardPage;","import React, {Component} from 'react';\r\nimport '../app-style.css';\r\n\r\nimport * as moment from \"moment\";\r\n\r\nlet peopleArr =  JSON.parse(localStorage.getItem('listCopy')) !== null ?  JSON.parse(localStorage.getItem('listCopy')) : [];\r\nlet peopleDoneArr = JSON.parse(localStorage.getItem('listDone')) !== null ?  JSON.parse(localStorage.getItem('listDone')) : [];\r\nlet peopleNotDoneArr = JSON.parse(localStorage.getItem('listNotDone')) !== null ?  JSON.parse(localStorage.getItem('listNotDone')) : [];\r\n\r\nlet boardPath = \"/light-board\";\r\nlet specPath = \"/spec\";\r\nlet userPath = \"/user\";\r\nlet adminPath = \"/\";\r\nlet newArr = [];\r\n\r\nfunction CalcTimeOnDone (array,array2){\r\n    let tempArr2 = [];\r\n    let tempArr = [];\r\n    let tempTimeDone = \"00:00\"\r\n    if(array2.length >= 0) {\r\n        array2.map((item) => {\r\n            window.SpecDirectory.specTypes.map((spec) => {\r\n                if (spec.key === item.spec.toLowerCase() && item.bool == true) {\r\n                    console.log(item)\r\n                    tempArr2.push({\r\n                        index: item.index,\r\n                        qNumber: item.qNumber,\r\n                        name: item.name,\r\n                        spec: item.spec,\r\n                        surname: item.surname,\r\n                        bool: item.bool,\r\n                        timeAdded: item.timeAdded,\r\n                        timeDone: moment().format(\"HH:mm\"),\r\n                        timeLast: moment.utc(moment(moment().format(\"HH:mm\"), \"HH:mm\").diff(moment(item.timeAdded, \"HH:mm\"))).format(\"HH:mm\")\r\n                    })\r\n                    // console.log(tempArr2)\r\n                    tempArr.push({\r\n                        spec: spec.display,\r\n                        time: moment.utc(moment(moment().format(\"HH:mm\"), \"HH:mm\").diff(moment(item.timeAdded, \"HH:mm\"))).format(\"HH:mm\"),\r\n                        instances: 1,\r\n                        avgTime: 0\r\n                    })\r\n                }\r\n\r\n            })\r\n        })\r\n    }\r\n   console.log(tempArr);\r\n\r\n    localStorage.setItem('listDone',JSON.stringify(tempArr2));\r\n    console.log(tempArr2);\r\n    let tempArr3 = array.filter((el, i, tempArr2) => i === tempArr2.indexOf(el));\r\n\r\n\r\n    tempArr.map((item) => {\r\n        item.time = moment(item.time, \"HH:mm\").diff(moment().startOf(\"day\"), \"seconds\");\r\n    })\r\n\r\n    const result = [...tempArr.reduce((r, o) => {\r\n        const key = o.spec;\r\n\r\n        const item = r.get(key) || Object.assign({}, o, {\r\n            time: 0,\r\n            instances: 0\r\n        });\r\n        item.time += o.time;\r\n        item.instances += o.instances;\r\n\r\n        return r.set(key, item);\r\n    }, new Map).values()];\r\n\r\n\r\n    result.map((item) => {\r\n        item.avgTime = moment.utc(moment.duration((item.time / item.instances), \"seconds\").asMilliseconds()).format(\"HH:mm\")\r\n    })\r\n    console.log(result);\r\n    let tempTime = \"00:00\";\r\n    let temptemp=0;\r\n    peopleArr = tempArr3.concat(tempArr2);\r\n    let tempArr4 = [];\r\n    for(let i=0; i<peopleArr.length; i++) {\r\n        result.map((o => {\r\n            if (o.spec === peopleArr[i].spec) {\r\n                if(i>0 && peopleArr[i].spec === peopleArr[i-1].spec && peopleArr[i].bool == false && peopleArr[i-1].bool == false){\r\n                    let temptemp = moment(o.avgTime, \"HH:mm\").diff(moment().startOf(\"day\"), \"seconds\");\r\n                    tempTime = moment.utc(moment.duration(temptemp*2, \"seconds\").asMilliseconds()).format(\"HH:mm\")\r\n                    console.log(peopleArr[i].spec + \" \"+tempTime)\r\n                }else if(i>0 && peopleArr[i].spec === peopleArr[i-1].spec && peopleArr[i].bool === true){\r\n                    tempTime = o.avgTime;\r\n                }else if(i>0 && peopleArr[i].spec !== peopleArr[i-1].spec){\r\n                    tempTime=o.avgTime;\r\n                }\r\n            }\r\n        }))\r\n        tempArr4.push({\r\n            index: peopleArr[i].index,\r\n            qNumber: peopleArr[i].qNumber,\r\n            name: peopleArr[i].name,\r\n            spec: peopleArr[i].spec,\r\n            surname: peopleArr[i].surname,\r\n            bool: peopleArr[i].bool,\r\n            timeAdded: peopleArr[i].timeAdded,\r\n            timeDone: peopleArr[i].timeDone,\r\n            timeLast: peopleArr[i].timeLast,\r\n            avgTime: tempTime\r\n        })\r\n    }\r\n    peopleArr = tempArr4;\r\n    peopleDoneArr = tempArr2;\r\n    tempArr3 =  tempArr4.filter(word => word.bool == false);\r\n    peopleNotDoneArr = tempArr3;\r\n    localStorage.setItem('listCopy',JSON.stringify(tempArr4));\r\n    localStorage.setItem('listNotDone',JSON.stringify(tempArr3));\r\n}\r\nfunction ChangeClass(){\r\n    if(window.location.pathname === specPath){\r\n        document.getElementById(\"spec-path\").className = \"spec-active\"\r\n    }else if(window.location.pathname === adminPath) {\r\n        document.getElementById(\"admin-path\").className = \"admin-active\"\r\n    }\r\n}\r\nfunction SideBarNav(props){\r\n    console.log(window.location.pathname)\r\n    return (\r\n        <div className=\"navBar\">\r\n            <header id=\"menu\">\r\n                Meniu\r\n            </header>\r\n            <ul className=\"nav\">\r\n                <li>\r\n                    <a href={adminPath}>\r\n                        <i className=\"zmdi zmdi-link\"></i> Administracinis puslapis\r\n                    </a>\r\n                </li><li>\r\n                    <a href={boardPath}>\r\n                        <i className=\"zmdi zmdi-link\"></i> Švieslentė\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href={specPath}>\r\n                        <i className=\"zmdi zmdi-widgets\"></i> Specialisto puslapis\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href={userPath}>\r\n                        <i className=\"zmdi zmdi-widgets\"></i> Lankytojo puslapis\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Filter(props) {\r\n    function updateSpec(evt) {\r\n        props.updateFromState({ currentSpec: evt.target.value });\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"group\">\r\n                <span className=\"glyphicon glyphicon-filter\"></span>\r\n                <select\r\n                    name=\"spec_title\"\r\n                    id=\"spec-title\"\r\n                    value={props.currentSpec}\r\n                    onChange={updateSpec}>\r\n                    <option value=\"\">\r\n                        Filtras\r\n                    </option>\r\n                    {window.SpecDirectory.specTypes.map(function(item) {\r\n                        return (\r\n                            <option value={item.display} key={item.key}>\r\n                                {item.display}\r\n                            </option>\r\n                        );\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction PatientRow (props){\r\n        return (\r\n            <tr>\r\n                <th key={props.key} id={props.id} scope={\"row\"}>{props.counter}</th>\r\n                <td key={props.key} id={props.id}>{props.name}</td>\r\n                <td key={props.key} id={props.id}>{props.surname}</td>\r\n                <td key={props.key} id={props.id}>{props.qNumber}</td>\r\n                {/*<td><button className=\"row-delete\"\r\n                            onClick={this.props.deleteItem}>Aptarnauta\r\n                </button></td>*/}\r\n                <td><button className=\"glyphicon glyphicon-ok\" id=\"served-btn\" onClick={props.handleDoneCheck}></button>\r\n                </td>\r\n            </tr>\r\n\r\n        );\r\n}\r\nclass SpecPage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            listOfPeople: [],\r\n            error: null,\r\n            currentSpec: \"\",\r\n            isServiced: false\r\n        }\r\n        this.updateFromState = this.updateFromState.bind(this);\r\n\r\n        if(peopleNotDoneArr.length <= 1){\r\n            this.count = 1;\r\n        }\r\n        else {\r\n            this.count = peopleNotDoneArr[peopleNotDoneArr.length-1].index;\r\n        }\r\n    }\r\n\r\n    buildList =(data)=>{\r\n        console.log(data);\r\n        this.setState({listOfPeople: data})\r\n    }\r\n    componentDidMount() {\r\n        console.log('did mount')\r\n        let url = './data.json';\r\n        let tempArr = [];\r\n        let data = localStorage.getItem('listNotDone');\r\n        if (data) {\r\n                this.setState({\r\n                    listOfPeople: JSON.parse(data)\r\n                });\r\n        }\r\n    }\r\n\r\n    deleteItem = indexToDelete => {\r\n        this.setState(({ listOfPeople }) => ({\r\n            listOfPeople: newArr = listOfPeople.filter((people, index) => index !== indexToDelete)\r\n        }));\r\n\r\nconsole.log(this.state)\r\n    };\r\n\r\n/*\r\n    updateLocalStorage(arr){\r\n        const data = localStorage.getItem('listCopy');\r\n\r\n        arr.map((item) => {\r\n            peopleNotDoneArr.push(item);\r\n        })\r\n        peopleNotDoneArr = peopleNotDoneArr.filter((el, i, peopleNotDoneArr) => i === peopleNotDoneArr.indexOf(el));\r\n        if(data){\r\n            localStorage.setItem('listCopy', JSON.stringify(peopleNotDoneArr));\r\n        }\r\n//deletion from json here\r\n\r\n    }*/\r\n    handleDoneCheck (index) {\r\n        let tempArr = [],\r\n            tempArr2 = [];\r\n        const data = localStorage.getItem('listCopy');\r\n\r\n        this.state.listOfPeople.map((item) => {\r\n            if (item.index === index) {\r\n                item.bool = true;\r\n                peopleDoneArr.push(item);\r\n            } else {\r\n                tempArr.push(item);\r\n            }\r\n        })\r\n        tempArr2 = peopleDoneArr.concat(tempArr)\r\n        //console.log(tempArr2)\r\n        if(data) {\r\n            localStorage.setItem('listNotDone',JSON.stringify(tempArr))\r\n            localStorage.setItem('listDone',JSON.stringify(peopleDoneArr))\r\n        }\r\n        CalcTimeOnDone(tempArr,tempArr2);\r\n        this.setState({\r\n            listOfPeople: tempArr\r\n        })\r\n    }\r\n\r\n    updateFromState(spec) {\r\n        this.setState(spec, this.updatePeopleList);\r\n    }\r\n    updatePeopleList() {\r\n        var filteredPeople;\r\n        const data = localStorage.getItem('listNotDone');\r\n        if(!data) {\r\n            filteredPeople = peopleNotDoneArr.filter(\r\n                function (person) {\r\n                    return (\r\n                        (   this.state.currentSpec === \"\" ||\r\n                            person.spec === this.state.currentSpec)\r\n                    );\r\n                }.bind(this)\r\n            );\r\n        }else {\r\n            filteredPeople = JSON.parse(data).filter(\r\n                function (person) {\r\n                    return (\r\n                        (this.state.currentSpec === \"\" ||\r\n                            person.spec === this.state.currentSpec)\r\n                    );\r\n                }.bind(this)\r\n            );\r\n        }\r\n        this.setState({\r\n            listOfPeople: filteredPeople\r\n        });\r\n    }\r\n    render(){\r\n        console.log('render');\r\n\r\n        let o=1;\r\n        return (\r\n            <div id={\"viewport\"}>\r\n                <div id=\"sidebar\">\r\n                    <SideBarNav />\r\n                </div>\r\n                <div id=\"content\">\r\n                    <div>\r\n                        <nav className=\"navbar navbar-default\">\r\n                            <div className=\"container-fluid-spec\">\r\n                                <ul className=\"nav navbar-nav navbar-right\">\r\n                                    <Filter listOfPeople={this.state.listOfPeople} currentSpec={this.state.currentSpec} updateFromState={this.updateFromState} />\r\n                                </ul>\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n                    <div>\r\n                        <table className=\"table table-hover\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Nr.</th>\r\n                                <th>Vardas</th>\r\n                                <th>Pavardė</th>\r\n                                <th>Eilės numeris</th>\r\n                                <th>Aptarnauti</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {this.state.listOfPeople.length > 0 &&\r\n                            this.state.listOfPeople.map((item,key) => (\r\n                                <PatientRow updateFromState={this.updateFromState} index={item.index} counter={o++} name={item.name} surname={item.surname} qNumber={item.qNumber} isServiced={item.isServiced} key={key} id={key} handleDoneCheck={this.handleDoneCheck.bind(this,item.index)} updatePatient={this.updatePatient}/>\r\n                            ))\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                        {this.state.error &&\r\n                        <h3>{this.state.error}</h3>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SpecPage;","import React, {Component,  useState, useEffect } from 'react';\r\nimport * as moment from 'moment/moment';\r\nimport \"../user-style.css\";\r\n\r\nlet temp = 6000;\r\nconst endDate = moment().add(temp, 'seconds')\r\nfunction FindTime(props){\r\n    return (\r\n        <div id=\"form-hide\">\r\n            <label id=\"label-hide\" className=\"label-main\">Patikrinti savo laiką</label>\r\n        <form id=\"find-form\">\r\n            <label className=\"label-qNumber\" htmlFor=\"inputQnumber\">Eilės numeris</label>\r\n            <input onkeyup={props.handleNumberChange} type=\"text\" className=\"input-form\" id=\"inputNumber\"></input>\r\n            <button type=\"submit\" onClick={props.findPatientTime} className=\"btn-submit-number\">Patvirtinti</button>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\nfunction DelayTime(props){\r\n    function onClickChange(){\r\n        document.getElementById(\"change\").innerHTML = props.time;\r\n    }\r\n    return <button onClick={onClickChange} id=\"btn-later\" type=\"submit\" className=\"btn btn-primary\">Pavėlinti</button>\r\n}\r\nfunction TimeCountDown(props){\r\n    const [seconds, setSeconds] = useState(props.seconds);\r\n    function secondsToHms(d) {\r\n        d = Number(d);\r\n        var h = Math.floor(d / 3600);\r\n        var m = Math.floor(d % 3600 / 60);\r\n        var s = Math.floor(d % 3600 % 60);\r\n\r\n        var hDisplay = h > 0 ? h + (\":\") : \"00:\";\r\n        var mDisplay = m > 0 ? m + (\":\") : \"00:\";\r\n        var sDisplay = s > 0 ? s + (\"\") : \"00\";\r\n        return hDisplay + mDisplay + sDisplay;\r\n    }\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setSeconds(seconds => seconds - 5);\r\n        }, 5000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n\r\n    return (\r\n            <p id=\"change\" className=\"App-header\">\r\n                {secondsToHms(seconds)}\r\n            </p>\r\n    );\r\n};\r\nclass UserBoard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listOfPeople: JSON.parse(localStorage.getItem('listNotDone')),\r\n            error: null,\r\n            number: 0,\r\n            time: \"\",\r\n            numberAhead: 0,\r\n            timeAhead: \"\",\r\n            showResult: false,\r\n            change: false,\r\n            found: false\r\n        }\r\n        this.handleNumberChange = this.handleNumberChange.bind(this);\r\n        this.handleOnDelay = this.handleOnDelay.bind(this);\r\n    }\r\n\r\n\r\n    handleNumberChange(evt) {\r\n        this.setState({\r\n            number: evt.target.value\r\n        })\r\n    }\r\n    findPatientTime(evt){\r\n        evt.preventDefault();\r\n\r\n        document.getElementById(\"label-hide\").style.display = \"none\";\r\n        let tempList = this.state.listOfPeople;\r\n        let number = parseInt(document.getElementById(\"inputNumber\").value);\r\n\r\n        for(let i=0; i<tempList.length; i++){\r\n            if(tempList[i].qNumber === number) {\r\n                if (i < tempList.length) {\r\n                    if (tempList[i].spec.indexOf(tempList[i + 1].spec) >= 0) {\r\n                        console.log(tempList[i].spec + \" \" + tempList[i + 1].spec)\r\n                        this.setState({\r\n                            number: tempList[i].qNumber,\r\n                            time: tempList[i].avgTime,\r\n                            numberAhead: tempList[i + 1].qNumber,\r\n                            timeAhead: tempList[i + 1].avgTime,\r\n                            found: false\r\n                        })\r\n                    } else {\r\n                        console.log(tempList[i].qNumber)\r\n                        this.setState({\r\n                            number: tempList[i].qNumber,\r\n                            time: tempList[i].avgTime,\r\n                            numberAhead: 0,\r\n                            timeAhead: \"00:00\",\r\n                            found: true\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n            else{\r\n                this.setState({\r\n                    found:false\r\n                })\r\n            }\r\n            }\r\n        this.displayOnClick();\r\n        if(this.state.number === 0){\r\n            this.hideOnClick();\r\n            this.handleNotFund();\r\n        }\r\n\r\n    };\r\n    displayOnClick(){\r\n        this.setState({\r\n            showResult: true\r\n        })\r\n    }\r\n    hideOnClick(){\r\n        this.setState({\r\n            showResult: false\r\n        })\r\n    }\r\n    handleNotFund(){\r\n        this.setState({\r\n            found: true\r\n        })\r\n    }\r\n    handleOnDelay(){\r\n        this.setState({\r\n            change: true\r\n        })\r\n    }\r\n    render() {\r\n        console.log(this.state);\r\n        return (\r\n            <div>\r\n                { this.state.showResult ?\r\n                    <div id=\"show-number\" className=\"jumbotron jumbotron-fluid\">\r\n                    <div className=\"container\">\r\n                        <h1 className=\"display-4\">Jūsų eilės numeris {this.state.number}</h1>\r\n                        <div className=\"inline-show\">\r\n                            <p className=\"lead2\">Likęs laukti laikas </p>\r\n                            {\r\n                                this.state.change ?\r\n                                    <TimeCountDown seconds={moment(this.state.timeAhead, \"HH:mm\").diff(moment().startOf(\"day\"), \"seconds\")}/> :\r\n                                    <TimeCountDown seconds={moment(this.state.time, \"HH:mm\").diff(moment().startOf(\"day\"), \"seconds\")}/>\r\n                            }\r\n                            <button onClick={this.handleOnDelay} id=\"btn-later\" type=\"submit\" className=\"btn btn-primary\">Pavėlinti</button>\r\n                        </div>\r\n                    </div>\r\n                </div> :  this.state.found ? <div className=\"container\">\r\n                    <h1 className=\"display-4\">Tokio eilės numerio nėra</h1>\r\n                </div> : null}\r\n                <FindTime handleNumberChange={this.handleNumberChange} findPatientTime={this.findPatientTime.bind(this)}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserBoard;","import React, {Component,  useState } from 'react';\r\n//import { Button, ButtonToolbar, Modal } from 'react-bootstrap';\r\n\r\nimport{ BrowserRouter as Router, Route, Switch, Link, Redirect} from 'react-router-dom';\r\n\r\nimport AdminPage from \"./pages/admin\";\r\nimport LightBoardPage from \"./pages/board\";\r\nimport SpecialistPage from \"./pages/spec\";\r\nimport CountVisitTime from \"./pages/user\";\r\n\r\nclass App extends Component {\r\n    render(){\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path={\"/\"} component={AdminPage} />\r\n                    <Route exact path={\"/light-board\"} component={LightBoardPage} />\r\n                    <Route exact path={\"/spec\"} component={SpecialistPage} />\r\n                    <Route exact path={\"/user\"} component={CountVisitTime} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}